#!/usr/bin/bash

# Initialize variables
uid=""
gid=""
homedir=""
shell="/bin/bash"
username=""
groups=""

# Ensures root user is running the script
if [[ $EUID -ne 0 ]]; then
  echo "Script mnust be ran as a root user."
  exit 1
fi

# Parse command-line options
while getopts ":u:g:h:s:G:" opt; do
  case $opt in
    u) uid="$OPTARG" ;;
    g) gid="$OPTARG" ;;
    h) homedir="$OPTARG" ;;
    s) shell="$OPTARG" ;;
    G) groups="$groups $OPTARG" ;;
  esac
done

# Shift to get username as positional argument
shift $((OPTIND - 1))
username="$1"

# Set default UID if not provided
if [ -z "$uid" ]; then
  uid=1000
fi

# Set default GID if not provided
if [ -z "$gid" ]; then
  gid="$uid"
fi

# Set default home directory if not provided
if [ -z "$homedir" ]; then
  homedir="/home/$username"
fi

# Set default shell if not provided
if [ -z "$shell" ]; then
  shell="/bin/bash"
fi

# Add user to /etc/passwd
echo "$username:x:$uid:$gid::$homedir:$shell" >> /etc/passwd

# Create the home directory and set permissions
mkdir -p "$homedir"
cp -r /etc/skel/. "$homedir"
chown -R "$username:$username" "$homedir"
chmod 700 "$homedir"

# Add user to additional groups if specified
if [ -n "$groups" ]; then
  for group in $groups; do
    # Check if the group exists, if not, create it
    if ! grep -q "^$group:" /etc/group; then
      groupadd "$group"
    fi
    # Add the user to the group
    usermod -aG "$group" "$username"
  done
fi

# Set the password for the new user
passwd "$username"

echo "User '$username' created successfully!"

I

